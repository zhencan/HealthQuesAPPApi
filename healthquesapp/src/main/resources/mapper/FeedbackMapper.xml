<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.secondgroup.mapper.FeedbackMapper">
  <resultMap id="BaseResultMap" type="com.secondgroup.pojo.Feedback">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="at_create" jdbcType="INTEGER" property="atCreate" />
    <result column="at_update" jdbcType="INTEGER" property="atUpdate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from phq_feedback
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.secondgroup.pojo.Feedback">
    insert into phq_feedback (id, user_id, title, 
      content, at_create, at_update
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{atCreate,jdbcType=INTEGER}, #{atUpdate,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.secondgroup.pojo.Feedback">
    update phq_feedback
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      at_create = #{atCreate,jdbcType=INTEGER},
      at_update = #{atUpdate,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, title, content, at_create, at_update
    from phq_feedback
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, title, content, at_create, at_update
    from phq_feedback
  </select>

  <update id="updateByIdAndUserId" parameterType="com.secondgroup.pojo.Feedback">
  	update phq_feedback
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      at_update = #{atUpdate,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="selectAllByUserId" resultMap="BaseResultMap">
    select id, user_id, title, content, at_create, at_update
    from phq_feedback
    where user_id = #{userId,jdbcType=INTEGER}
    order by at_create desc
  </select>
</mapper>