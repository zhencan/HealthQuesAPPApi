<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.secondgroup.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="com.secondgroup.pojo.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="ques_tpl_id" jdbcType="INTEGER" property="quesTplId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="is_occupy" jdbcType="INTEGER" property="isOccupy" />
    <result column="at_create" jdbcType="INTEGER" property="atCreate" />
    <result column="at_update" jdbcType="INTEGER" property="atUpdate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from phq_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.secondgroup.pojo.Message">
    insert into phq_message (id, user_id, ques_tpl_id, 
      title, content, is_occupy, 
      at_create, at_update)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{quesTplId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{isOccupy,jdbcType=INTEGER}, 
      #{atCreate,jdbcType=INTEGER}, #{atUpdate,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.secondgroup.pojo.Message">
    update phq_message
    set user_id = #{userId,jdbcType=INTEGER},
      ques_tpl_id = #{quesTplId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      is_occupy = #{isOccupy,jdbcType=INTEGER},
      at_create = #{atCreate,jdbcType=INTEGER},
      at_update = #{atUpdate,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_id, ques_tpl_id, title, content, is_occupy, at_create, at_update
    from phq_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, ques_tpl_id, title, content, is_occupy, at_create, at_update
    from phq_message
  </select>

  <select id="selectOccupyMessage" parameterType="com.secondgroup.pojo.Message" resultType="Integer">
    select COUNT(*)
    from phq_message
    where user_id = #{userId,jdbcType=INTEGER} and is_occupy = #{isOccupy,jdbcType=INTEGER}
  </select>
    <!--查询结果将未读的放在前面，并按时间降序-->
  <select id="selectAllMessage" resultMap="BaseResultMap">
    select id, user_id, ques_tpl_id, title, content, is_occupy, at_create, at_update
    from phq_message
    where user_id = #{userId,jdbcType=INTEGER}
    order by is_occupy desc, at_create desc
  </select>
    <!--更新未读消息为已读-->
  <update id="updateOccupyMessage" parameterType="com.secondgroup.pojo.Message">
    update phq_message
    set is_occupy = 0,
      at_update = #{atUpdate,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>